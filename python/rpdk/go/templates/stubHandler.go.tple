package resource

import (
	"context"

	"github.com/aws-cloudformation/aws-cloudformation-rpdk-go-plugin/cfn/cfnerr"
	"github.com/aws-cloudformation/aws-cloudformation-rpdk-go-plugin/cfn/handler"
)

// Handler implements the cfn.Handler interface.
// The zero value is ready to use.
type Handler struct {
}
{% for method in ("Create", "Read", "Update", "Delete", "List") %}

// {{ method }} handles the {{ method }} event from the Cloudformation service.
func (r *Handler) {{ method }}(ctx context.Context, request handler.Request) handler.ProgressEvent {
	//***Add code here: Make your API call, modify the model, etc..
	m := &Model{}
	if err := request.Unmarshal(m); err != nil {
		cfnErr := cfnerr.New(cfnerr.GeneralServiceException, "Unable to complete request", err)
		return handler.NewFailedEvent(cfnErr)
	}

	p := handler.NewProgressEvent()
	p.ResourceModel = m
	p.BearerToken = request.BearerToken()
	p.OperationStatus = handler.Success
	p.Message = "Completed"

	// return the status
	return p
}
{% endfor %}
